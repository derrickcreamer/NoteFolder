@model FileVM

<div id="fileInfo">
	@Html.ActionLink($"{User.Identity.Name}'s files", "Index", "File", new { path = "" }, new { @class = "pathWord pathLink" })
	@{ var pathSections = Model.Path.Split(new char[] { '/' }, StringSplitOptions.RemoveEmptyEntries); }
	@for(int i = 1;i<pathSections.Length;++i) {
		string[] partialPath = new string[i];
		Array.Copy(pathSections, partialPath, i);
		string path = string.Join("/", partialPath);

		<span class="pathSeparator"> / </span>
		@Html.ActionLink(partialPath[i - 1], "Index", "File", new { path = path }, new { @class = "pathWord pathLink" })
	}
	@if(!Model.IsRootFolder) {
		<span class="pathSeparator"> / </span><span class="pathWord pathName">@Model.Name</span>
		<div class="desc">@Model.Description</div>
		<div class="times">
			<div class="time">Created: @Model.TimeCreated</div>
			@if(Model.TimeCreated != Model.TimeLastEdited) {
				<div class="time">Last edited: @Model.TimeLastEdited</div>
			}
		</div>
		<button type="button" id="toggleEditBtn" class="mainBtn btn">Edit @Model.Name</button>
		@Html.Partial("_Edit", Model)
	}
	@if(Model.IsFolder) {
		<button type="button" id="newFolderBtn" class="mainBtn btn">New Folder</button>
		<button type="button" id="newNoteBtn" class="mainBtn btn">New Note</button>
		@Html.Partial("_Create", new FileVM { IsFolder = true, ParentID = Model.ExistingID, Path = Model.Path })
		@Html.Partial("_Create", new FileVM { IsFolder = false, ParentID = Model.ExistingID, Path = Model.Path })
	}
	<div id="allContents">
		Contents:
		@Html.Partial("_Contents", Model)
	</div>
</div>

@section PageScripts{
<script type="text/javascript"> @* todo: Find a good organization scheme for scripts. *@
	function checkUpdateSuccess(result, status, xhr, id, buttonID) {
		if (result.authFailed) {
			$('#' + id).prepend("You've been logged out. If you just tried to save changes, those changes have NOT been applied.");
			$('#' + buttonID).prop('disabled', true);
		}
		else {
			if (result.success) {
				window.location.href = '/@(User.Identity.Name)/files/' + result.path;
			}
			else {
				$('#' + id).replaceWith(result.html);
			}
		}
	}
	function ajaxError(xhr, status, error, id) {
		$('#' + id).prepend("Something went wrong. If you just tried to save changes, those changes have NOT been applied.");
	}
	$(document).on('click', '.loadContentsBtn', function (e) {
		e.preventDefault();
		var button = $(e.target);
		var form = button.parent();
		var contents = $("#contents" + form.attr('id'));
		if (contents[0].nodeName == "DIV") { // if it's a div, it's already loaded.
			if (button.text() == "+") button.text("-");
			else button.text("+");
			contents.toggle();
		}
		else {
			button.text("-");
			$.ajax({
				type: 'POST',
				url: '@Url.Action("GetContents","File")',
				data: form.serialize(),
				datatype: 'json',
				success: function (result, status, xhr) {
					if (result.authFailed) {
						window.location.reload(true);
					}
					else {
						if (result.success) {
							contents.replaceWith(result.html);
						}
					}
				},
				error: function (xhr, status, error) {
					contents.text("Something went wrong between here and the server - check your connection.");
					button.prop('disabled', true);
				}
			});
		}
	});
	$('#toggleEditBtn').click(function (e) {
		e.preventDefault();
		$('#editForm').toggle()
	});
	$('#newFolderBtn').click(function (e) {
		e.preventDefault();
		$('#createFolderForm').toggle();
		$('#createNoteForm').toggle(false);
	});
	$('#newNoteBtn').click(function (e) {
		e.preventDefault();
		$('#createNoteForm').toggle();
		$('#createFolderForm').toggle(false);
	});
</script>
}

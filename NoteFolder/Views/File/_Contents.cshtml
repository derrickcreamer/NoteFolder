@model FileVM

<div id='@("contentsFor" + Model.ExistingID.ToString())'>
	@if(Model.IsFolder) {
		if(Model.DirectChildren.Count == 0) {
			<span class="emptyContents">(empty)</span>
		}
		else {
			<ul>
				@foreach(var child in Model.DirectChildren) {
					<li class="contentWhole">
						@{
							string childBaseID = "For" + child.ExistingID.ToString();
						}
						<div class="contentRow">
							<form class="loadContentsForm" id='@childBaseID'>
								<input type="hidden" name="Path" value="@child.Path" />
								<button class="loadContentsBtn btn" type="submit">+</button>
							</form>
							@Html.ActionLink(child.Name, "Index", "File", new { path = child.Path }, new { @class = "contentNameLink userData" })
							@if(!string.IsNullOrEmpty(child.Description)) {
								<span class="contentDesc userData">@child.Description</span>
							}
						</div>
						<span id='@("contents" + childBaseID)'></span>
					</li>
				}
			</ul>
		}
	}
	else{
		if(string.IsNullOrEmpty(Model.Text)){
			<span class="emptyContents">(empty)</span>
		}
		else{
			<p class="noteText userData">@Model.Text</p>
		}
	}
</div>
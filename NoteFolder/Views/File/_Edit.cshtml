@model FileVM

@{ string openClass = IsAjax? "open" : null; }
<div id='editForm' class='collapsible @openClass'>
	@using(Ajax.BeginForm("Edit", "File", new AjaxOptions { OnSuccess = $"checkAjaxSuccess(data, 'editForm')" })) {
		@Html.ValidationMessage("Name")
		@Html.Label("Name")
		@Html.TextBox("Name")
		@Html.Label("Description")
		@Html.TextBox("Description")
		if(!Model.IsFolder) {
			@Html.Label("Text")
			@Html.TextArea("Text")
		}
		@Html.Hidden("Path")
		@Html.Hidden("IsFolder")
		@Html.Hidden("ExistingID")
		<input type="submit" value="Edit" />
	}
	@{
		@* todo: There's a bug here: DirectChildren is not populated after the initial call,
			so the ajax call can't use it. This means that the confirmation message can be wrong after a bad edit. *@
	string deleteMsg;
	if(Model.IsFolder) {
		if(Model.DirectChildren?.Count > 0) {
			deleteMsg = "Really delete this folder and everything in it?";
		}
		else {
			deleteMsg = "Really delete this folder?";
		}
	}
	else {
		deleteMsg = "Really delete this note?";
	}
	}
	@using(Ajax.BeginForm("Delete", "File", new AjaxOptions { OnSuccess = "checkAjaxSuccess(data, 'editForm')" },
					new { onclick = $"return confirm('{deleteMsg}');" })) {
		@Html.Hidden("Path")
		@Html.Hidden("ExistingID")
		<input type="submit" value="Delete" />
	}
</div>
